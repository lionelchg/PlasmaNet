#############################################################################################################
#                                                                                                           #
#                            PlasmaNet -- Architectures with around 100 000 params                          #
#                                                                                                           #
#                                     Lionel Cheng, CERFACS, 02.04.2021                                     #
#                                                                                                           #
#############################################################################################################

# Receptive field of the coarser resolution filled (12 * 2 + 1 = 25)
UNet3:
    type: 'UNet'
    args:
        in_fmaps: [1, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10]
        down_blocks: [[10, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14]]
        bottom_fmaps: [14, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20]
        up_blocks: [[34, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14]]
        out_fmaps: [24, 10, 10, 10, 10, 10, 10, 10, 10, 10, 1]

# Receptive field of the coarser resolution filled (6 * 2 + 1 = 12)
UNet4:
    type: 'UNet'
    args:
        in_fmaps: [1, 12, 12, 12, 12, 12, 12]
        down_blocks: [[12, 15, 15, 15, 15, 15, 15],
                [15, 15, 15, 15, 15, 15, 15]]
        bottom_fmaps: [15, 25, 25, 25, 25, 25, 25]
        up_blocks: [[40, 15, 15, 15, 15, 15, 15, 15],
                [30, 15, 15, 15, 15, 15, 15, 15]]
        out_fmaps: [27, 12, 12, 12, 12, 12, 12, 1]

# All the recepetive field are filled from the n / 4 resolution
# The receptive field is in fact propagated after the skip connection ?
# The network doesn't learn anything with this architecture !!!
UNet5:
    type: 'UNet'
    args:
        in_fmaps: [1, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10]
        down_blocks: [[10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10],
                    [10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10],
                    [10, 15, 15, 15, 15, 15, 15]]
        bottom_fmaps: [15, 20, 20, 20, 20]
        up_blocks: [[35, 15, 15, 15, 15, 15, 15],
                    [25, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10],
                    [20, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10]]
        out_fmaps: [20, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 1]

# UNet6:
#     type: 'UNet'
#     args:
#         in_fmaps: [1, 16, 16]
#         down_blocks: [[16, 16, 16],
#                     [16, 16, 16],
#                     [16, 16, 16],
#                     [16, 24, 24]]
#         bottom_fmaps: [24, 24, 24]
#         up_blocks: [[48, 30, 24],
#                     [48, 24, 24],
#                     [40, 24, 24],
#                     [40, 16, 16]]
#         out_fmaps: [32, 16, 16, 1]
