########################################################################################################################
#                                                                                                                      #
#                                            cfdsolver -- Configuration file                                           #
#                                                                                                                      #
#                                           Lionel Cheng, CERFACS, 05.11.2020                                          #
#                                                                                                                      #
########################################################################################################################

# Contains the parameters for the model (training, etc.)

# To import the parameters, use
#     import yaml
#     with open('config.yml', 'r') as yaml_stream:
#         config = yaml.safe_load(yaml_stream)

casename: 'runs/2-networks/config_1/random_16/profiles_4p/'
description: 'Four periods runs of different profiles in 101x101'
mode: 'seq'
plasma/params/init_func: ['gaussian', 'gaussian', 'two_gaussians']
plasma/params/init_args: [[0.5e-2, 0.5e-2, 1.0e-3, 1.0e-3], [0.4e-2, 0.5e-2, 1.0e-3, 1.0e-3],
                    [0.4e-2, 0.5e-2, 1.0e-3, 1.0e-3, 0.6e-2, 0.5e-2, 1.0e-3, 1.0e-3]]

base:
  plasma:
    casename: 'runs/2-networks/config_1/random_16/two_gaussians/'

    params:
      n_periods: 4.01
      geom: 'xy'
      n_back: 1.0e+16
      n_pert: 1.0e+11
      # init_func: 'gaussian'
      # init_args: [0.4e-2, 0.5e-2, 1.0e-3, 1.0e-3]
      init_func: 'two_gaussians'
      init_args: [0.4e-2, 0.5e-2, 1.0e-3, 1.0e-3, 
                  0.6e-2, 0.5e-2, 1.0e-3, 1.0e-3]
      # init_func: 'sin2D'
      # init_args: [1.0e-2, 1.0e-2, 2.0, 2.0]
      dt: 1.0e-10
      nt_oscill: 5000

    poisson:
      type: 'lin_system'
      nmax_fourier: 10

    mesh:
      xmin: 0
      ymin: 0
      xmax: 1.0e-2
      ymax: 1.0e-2
      nnx: 101
      nny: 101

    BC: 'full_out'

    output:
      save: 'plasma_period'
      log_run: 'file'
      verbose: True
      period: 0.1
      files: 'fig'
      dl_save: 'no'
      nmax_fourier: 10
      globals:
        fig: [2.0, 4.0]
        vars: 'yes'

  network:
    name: 'poscill/UNet5/'                            # Experience name
    n_gpu: 1                                    # Number of GPUs to use
    # resume: '/scratch/cfd/cheng/DL/plasmanet/outputs/2-networks/models/config_0/fourier_5_2/1223_160606/model_best.pth'
    # resume: '/scratch/cfd/cheng/DL/plasmanet/outputs/2-networks/models/config_0/fourier_5_4/1223_160647/model_best.pth'
    # resume: '/scratch/cfd/cheng/DL/plasmanet/outputs/2-networks/models/config_1/fourier_5_2/1223_160744/model_best.pth'
    # resume: '/scratch/cfd/cheng/DL/plasmanet/outputs/2-networks/models/config_1/fourier_5_4/1223_160720/model_best.pth'
    # resume: '/scratch/cfd/cheng/DL/plasmanet/outputs/2-networks/models/config_1/random_8/1222_123839/model_best.pth'
    resume: '/scratch/cfd/cheng/DL/plasmanet/outputs/2-networks/models/config_1/random_16/1222_123943/model_best.pth'
    # resume: '/scratch/cfd/cheng/DL/plasmanet/outputs/2-networks/models/config_1/sim_gaussian/1223_165138/model_best.pth'
    # resume: '/scratch/cfd/cheng/DL/plasmanet/outputs/2-networks/models/config_0/target_case/1221_123107/model_best.pth'
    # resume: '/scratch/cfd/cheng/DL/plasmanet/outputs/2-networks/models/config_1/target_case/1222_133416/model_best.pth'
    # resume: '/scratch/cfd/cheng/DL/plasmanet/outputs/2-networks/models/config_2/target_case/1222_132408/checkpoint-epoch00100.pth'
    # resume: '/scratch/cfd/cheng/DL/plasmanet/outputs/2-networks/models/config_3/target_case/1222_144500/model_best.pth'
    # resume: '/scratch/cfd/cheng/DL/plasmanet/outputs/2-networks/models/config_4/target_case/1222_174927/model_best.pth'

    globals:                                    # Domain sizes and others, used to compute global attributes
        nnx: 101
        nny: 101
        lx: 0.01
        ly: 0.01
        coord: 'cart'

    arch:
        type: 'UNet5'
        args:
            data_channels: 1                    # For dirichlet use 2 or 3, and keep 1 or 5 for the homogeneous problem 

    data_loader:
        type: 'PoissonDataLoader'
        pipe_config: True
        args:
            data_dir: '/scratch/cfd/cheng/DL/datasets/101x101/target_case'
            batch_size: 64
            shuffle: True
            validation_split: 0.2               # if float, fraction of the full dataset, if int, length of validation portion
            num_workers: 4
            normalize: 'analytical'                   # max, physical or no for normalization types
            scaling_factor: 1.0e+6
    initializer: 'off'

    trainer:
        verbosity: 2
