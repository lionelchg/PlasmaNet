########################################################################################################################
#                                                                                                                      #
#                                         NetworkPoisson -- Configuration file                                         #
#                                                                                                                      #
#                                           Lionel Cheng, CERFACS, 04.03.2021                                          #
#                                                                                                                      #
########################################################################################################################

# Contains the parameters for the model (training, etc.)

# To import the parameters, use
#     import yaml
#     with open('config.yml', 'r') as yaml_stream:
#         config = yaml.safe_load(yaml_stream)


name: 'poscill/UNet5/target_case/'                            # Experience name
n_gpu: 1                                    # Number of GPUs to use

# resume: '/scratch/cfd/cheng/DL/plasmanet/NNet/outputs/2-networks/models/config_1/random_4/1228_180907/model_best.pth'
resume: '/scratch/cfd/cheng/DL/plasmanet/NNet/outputs/2-networks/models/config_1/random_8/1222_123839/model_best.pth'
# resume: '/scratch/cfd/cheng/DL/plasmanet/NNet/outputs/2-networks/models/config_1/random_16/1222_123943/model_best.pth'


globals:                                    # Domain sizes and others, used to compute global attributes
    nnx: 101
    nny: 101
    lx: 0.01
    ly: 0.01
    coord: 'cart'

arch:
    type: 'UNet5'
    args:
        data_channels: 1                    # For dirichlet use 2 or 3, and keep 1 or 5 for the homogeneous problem 

data_loader:
    type: 'PoissonDataLoader'
    pipe_config: True
    args:
        data_dir: '/scratch/cfd/cheng/DL/datasets/101x101/target_case'
        batch_size: 64
        shuffle: True
        validation_split: 0.2               # if float, fraction of the full dataset, if int, length of validation portion
        num_workers: 4
        normalize: 'analytical'                   # max, physical or no for normalization types
        scaling_factor: 1.0e+6
initializer: 'off'

trainer:
    verbosity: 2
